
plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '1.0'
    id 'jacoco'
    id 'checkstyle'
    id "com.diffplug.spotless" version "6.0.5"
    id "com.github.spotbugs" version "4.4.4"
    id "com.github.otkmnb2783.dotenv" version "0.2.0"
}

group 'com.github.brpaz'
version = file('version.txt').text.trim()

repositories {
    mavenCentral()
}

dependencies {
    testImplementation group: 'junit', name: 'junit', version: '4.5'

    // https://mvnrepository.com/artifact/org.mockito/mockito-core
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.11.1'

    implementation 'com.google.code.gson:gson:2.8.6'
    implementation group: 'commons-io', name: 'commons-io', version: '2.6'
}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    version '2020.1.1'
}

tasks {
    runIde {
        // Absolute path to the installed targetIDE to use as IDE Development Instance
        // Note the Contents directory must be added at the end of the path for macOS.
        ideDir.set(file("${env.IDE_PATH}"))
    }
    patchPluginXml {
        sinceBuild.set('193.*')
    }
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    afterEvaluate {
        getClassDirectories().setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['com/github/brpaz/jetbrains/plugin/vscodesnippets/settings', 'com/github/brpaz/jetbrains/plugin/vscodesnippets/extensions'])
        }))  //this task is excluding the core package classes
    }
    reports {
        xml.enabled true
        html.enabled true
    }
}

checkstyle {
    toolVersion '8.34'
}

spotless {
    java {
        googleJavaFormat()
    }
}


spotbugs {
    ignoreFailures = false
    effort = "more"
    reportLevel = "high"
}

spotbugsMain {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

publishPlugin {
    token = System.getenv("INTELIJ_PUBLISH_TOKEN")
}
